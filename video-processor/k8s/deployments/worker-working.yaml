apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-worker
  namespace: video-processor
spec:
  replicas: 2
  selector:
    matchLabels:
      app: video-worker
  template:
    metadata:
      labels:
        app: video-worker
    spec:
      containers:
      - name: worker
        image: python:3.11-slim
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash", "-c"]
        args:
        - |
          pip install requests &&
          python -c "
          import time, requests
          
          API_URL = 'http://api-service:8080'
          
          print('Worker starting...')
          while True:
              try:
                  response = requests.get(f'{API_URL}/jobs/next', timeout=5)
                  if response.status_code == 200:
                      job = response.json()
                      job_id = job['id']
                      print(f'Processing job: {job_id}')
                      
                      requests.post(f'{API_URL}/jobs/{job_id}/status', 
                                   json={'status': 'processing'})
                      
                      print(f'Simulating {job[\"operation\"]} processing...')
                      time.sleep(10)
                      
                      requests.post(f'{API_URL}/jobs/{job_id}/status', 
                                   json={'status': 'completed'})
                      print(f'Job {job_id} completed')
                  else:
                      print('No jobs available')
                  
                  time.sleep(5)
              except Exception as e:
                  print(f'Error: {e}')
                  time.sleep(10)
          "
        env:
        - name: API_URL
          value: "http://api-service:8080"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
